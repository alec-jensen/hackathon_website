---
import Layout from '../layouts/Layout.astro';
import { MongoClient } from 'mongodb';

const validateEmail = (email) => {
	const expr = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|.(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
	return expr.test(email);
};

const messages = {
  status: ""
};

if (Astro.request.method === "POST") {
	throw new Error("Registration is now closed!");
  try {
    const data = await Astro.request.formData();
    const email = data.get("email");

	if (!validateEmail(email)) {
		throw new Error("Invalid email address");
	}
    
	if (!import.meta.env.MONGODB_URI) {
	  throw new Error("MONGODB_URI is not defined in the environment variables");
	}

	const uri = import.meta.env.MONGODB_URI;
	const mongo = await new MongoClient(uri, {}).connect();
	const db = mongo.db("hackathon");

	const collection = db.collection("registrations");

	const doc = await collection.findOne({ "email": email });

	if (doc !== null) {
		messages.status = "You are already registered!"
	} else {
		const result = await collection.insertOne({ "email": email });
		
		if (result.acknowledged) {
			messages.status = "Registration successful!";
		} else {
			messages.status = "Registration failed. Please try again later.";
		}
	}
  } catch (error) {
    if (error instanceof Error) {
		console.error(error.message);
		messages.status = error.message;
    }
  }
}
---

<Layout title="Register for MHS Hackathon 2024">
	<main>
		<!-- <form method="POST">
			<h1>Register for MHS Hackathon <span class="text-gradient">2024</span></h1>
			<p>
				We are excited to announce that registration for MHS Hackathon 2024 is now open! The event will take place on
				April 20th, 2024 at the MHS campus. We are looking forward to seeing you there!
			</p>
			<p>
				Please fill out the form below to register for the event.
			</p>
			<input type="email" name="email" placeholder="Email" required>
			<sub>Please enter a valid school email address.</sub>
			<button type="submit" class="button">Register</button>
			<label class="label">{messages.status}</label>
		</form>
		<a href="/">Go Home</a>
		<div class="footer">
			<p>Created by Alec Jensen</p>
			<p>Â© 2024 Martin High School Computer Science Club</p>
			<a href="https://github.com/alec-jensen/hackathon_website" target="_blank">View site on GitHub</a>
		</div> -->

		<h1>Registration is now closed!</h1>
		<p>
			Thank you for your interest in MHS Hackathon 2024! Registration is now closed. We hope to see you at the event!
		</p>
		<a href="/">Go Home</a>
	</main>
</Layout>

<style>
	main {
		display: flex;
		flex-direction: column;
		justify-content: center;
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
		text-align: center;
	}

	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}

	p {
		margin: 0;
	}

	form {
		display: flex;
		flex-direction: column;
		align-items: center;
		text-align: center;
	}

	input {
		width: 100%;
		padding: 0.6em;
		margin-top: 1em;
		border: none;
		border-radius: 10px;
		font-size: 1.5rem;
		font-family: monospace;
		color: var(--text);
		background-color: var(--background);
		border: 2px solid var(--accent);
	}

	a {
		color: var(--accent);
		text-decoration: none;
	}

	a:hover {
		text-decoration: underline;
	}

	.material-symbols-outlined {
		vertical-align: bottom;
		padding: 0 0.2em;
	}

	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-position: 0%;
	}

	.label {
		color: rgb(141, 141, 141);
		font-style: italic;
		font-family: monospace;
	}

	.info {
		list-style: none;
		padding: 0;
		text-align: center;
		font-family: monospace;
	}

	.info li {
		margin: 0.5em 0;
	}

	.button {
		width: 30%;
		margin: auto;
		margin-top: 2em;
		display: block;
		text-align: center;
		padding: 0.6em;
		background-color: var(--accent);
		color: var(--text);
		border: none;
		border-radius: 10px;
		font-size: 1.5rem;
		font-weight: 700;
		cursor: pointer;
		transition: all 0.3s ease;
		font-family: monospace;
		margin-bottom: 2em;
	}

	.button:hover {
		background-color: var(--primary);
		text-decoration: none;
	}

	.footer {
		position: absolute;
		bottom: 0;
		left: 0;
		/* put items in row */
		display: flex;
		justify-content: space-evenly;
		align-items: center;
		gap: 2em;
		font-size: 0.9rem;
		left: 50%;
		transform: translateX(-50%);
	}

	@media screen and (max-width: 600px) {
		h1 {
			font-size: 3rem;
		}

		.number {
			font-size: 3rem;
		}

		.label {
			font-size: 0.9rem;
		}

		.separator {
			font-size: 3rem;
		}

		.button {
			width: 50%;
		}

		.footer {
			flex-direction: column;
			text-align: center;
			gap: 0.1em;
			width: 100%;
		}

		.footer p {
			margin: 0;
			padding: 0;
		}

		.footer a {
			font-size: 0.8rem;
			margin: 0;
			padding: 0;
		}
	}
</style>
